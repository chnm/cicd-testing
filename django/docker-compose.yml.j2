# this is a Jinja2 template file used during the Ansible deployment
# environment specific configuration can be found in our Ansble scripts
---
name: {{ compose_stack_name }}

services:

  {{ caddy_svc | indent(width=2, first=True ) }}

  {% set service = 'app' %}

  app:
    image: ghcr.io/{{ template.git.package.image_name }}:{{ template.git.package.tag }}
    restart: unless-stopped
    {% if service.environment is defined %}

    environment:
{% for env in service.environment %}
      - {{ env.key }}={{ env.value }}
{% endfor %}
    {% endif %}

    command: >
        sh -c "poetry run python3 manage.py migrate &&
               poetry run python3 manage.py runserver 0.0.0.0:8000"
    {% if service.volumes is defined and (service.volumes is iterable and service.volumes | length > 0) %}

    volumes:
{% for vol in service.volumes %}
    - {{ vol.host_path if vol.host_path is defined else vol.name }}:{{ vol.container_path }}
{% endfor %}
    {% endif %}

    depends_on:
      db:
        condition: service_healthy

  {% set service = 'db' %}

  db:
    image: {{ service.image if service.image is defined else "postgres:latest" }}
    restart: unless-stopped
    {% if service.environment is defined %}

    environment:
{% for env in service.environment %}
      - {{ env.key }}={{ env.value }}
{% endfor %}
    {% endif %}

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ service.environment | selectattr('key', 'equalto', 'POSTGRES_USER') | map(attribute='value') | first }}"]
      interval: 5s
      timeout: 5s
      retries: 5
    {% if service.volumes is defined and (service.volumes is iterable and service.volumes | length > 0) %}

    volumes:
{% for vol in service.volumes %}
    - {{ vol.host_path if vol.host_path is defined else vol.name }}:{{ vol.container_path }}
{% endfor %}
    {% endif %}

volumes:
  {{ caddy_vols | indent(width=2, first=True ) }}
  {{ stack | get_all_named_volumes(project_name) | indent(width=2) }}
